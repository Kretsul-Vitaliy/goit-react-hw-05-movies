{"version":3,"file":"static/js/Home__page.c34493ba.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/HomePage.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n    grid-gap: 16px;\n    border-radius: 8px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 15px 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const MoviesListItemStyled = styled.li`\n    position: relative;\n    img {\n        border-radius: 8px;\n    }\n    &:hover {\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\nexport const MovieListInfoBox = styled.div`\n    justify-content: center;\n    padding-top: 20px;\n    padding-bottom: 10px;\n`;\nexport const MovieListInfoText = styled.h2`\n    font-weight: 700;\n    font-size: 1em;\n    color: black;\n`;\nexport const MovieListInfoDate = styled.p`\n    font-weight: 400;\n    font-size: 1em;\n    color: rgba(0, 0, 0, 0.6);\n`;\nexport const CircularProgressbarBox = styled.div`\n    position: absolute;\n    top: 2px;\n    right: 4px;\n`;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport 'moment/locale/uk';\nimport {\n    CircularProgressbarBox,\n    MovieListInfoBox,\n    MovieListInfoDate,\n    MovieListInfoText,\n    MoviesListItemStyled,\n    MoviesListStyled,\n} from './MovieList.styled';\nimport defaultImage from '../../images/defaultImage.jpg';\nfunction MoviesList({ trendingMovies, location, lang }) {\n    const history = useHistory();\n    // console.log('history', history);\n    const trendingMoviesList = trendingMovies.map(trendingMovie => (\n        <MoviesListItemStyled key={trendingMovie.id}>\n            <Link\n                to={{\n                    pathname: `/movies/${trendingMovie.id}`,\n                    state: { detail: history.location },\n                }}\n            >\n                <img\n                    src={\n                        trendingMovie.poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${trendingMovie.poster_path}`\n                            : defaultImage\n                    }\n                    alt={trendingMovie.title}\n                />\n\n                <MovieListInfoBox>\n                    <CircularProgressbarBox style={{ width: 45, height: 45 }}>\n                        <CircularProgressbar\n                            value={trendingMovie.vote_average * 10}\n                            text={`${trendingMovie.vote_average * 10}%`}\n                            background={true}\n                            styles={{\n                                text: {\n                                    fill: '#f88',\n                                    fontSize: '36px',\n                                },\n                                background: {\n                                    fill: '#041101',\n                                },\n                                path: {\n                                    stroke: `rgba(62, 220, 30, ${\n                                        (trendingMovie.vote_average * 10) / 100\n                                    } )`,\n                                },\n                            }}\n                        />\n                    </CircularProgressbarBox>\n                    <MovieListInfoText>{trendingMovie.title}</MovieListInfoText>\n                    <MovieListInfoDate>\n                        {moment(trendingMovie.release_date)\n                            .locale(`${lang}`)\n                            .format('DD MMMM YYYY')}\n                    </MovieListInfoDate>\n                </MovieListInfoBox>\n            </Link>\n        </MoviesListItemStyled>\n    ));\n    return <MoviesListStyled>{trendingMoviesList}</MoviesListStyled>;\n}\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    margin-bottom: 10px;\n    margin-top: 10px;\n`;\n\nexport const SectionWrap = styled.section`\n    justify-content: center;\n    margin: 20px 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, SectionWrap } from './Section.styled';\n\n// рендерит секцию с заголовком и детей (children)\nconst Section = ({ title, children }) => {\n    return (\n        <SectionWrap>\n            <Title>{title}</Title>\n            {children}\n        </SectionWrap>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { getDataMovies } from '../services/movieApi';\nimport Section from '../components/Section';\nimport { v4 } from 'uuid';\n\nfunction HomePage({ lang }) {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const location = useLocation();\n    const titleListLang = [\n        { id: v4(), code: 'uk', title: 'Сьогодні в тренді' },\n        { id: v4(), code: 'ru', title: 'Сегодня в тренде' },\n        { id: v4(), code: 'en', title: 'Trending today' },\n    ];\n\n    const titleListLangFilter = titleListLang.filter(language => {\n        return language.code.includes(`${lang}`);\n    });\n\n    useEffect(() => {\n        getDataMovies('trending/movie/day', 1, lang).then(movie =>\n            setTrendingMovies(movie.results)\n        );\n    }, [lang]);\n\n    return (\n        <>\n            <Section title={titleListLangFilter[0].title}>\n                <MoviesList\n                    trendingMovies={trendingMovies}\n                    location={location}\n                    lang={lang}\n                />\n            </Section>\n        </>\n    );\n}\nexport default HomePage;\n","import axios from 'axios';\n\nexport const getDataMovies = async (endPoint, page = 1, lang = 'uk', query) => {\n    try {\n        const response = await axios({\n            method: 'get',\n            baseURL: `https://api.themoviedb.org/3/`,\n            url: `${endPoint}`,\n            timeout: 5000, // 5 секунд тайм-аута\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            params: {\n                api_key: process.env.REACT_APP_MOVIE_API_KEY,\n                page: `${page}`,\n                language: `${lang}`,\n                query: `${query}`,\n            },\n        });\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        throw error;\n    }\n};\n"],"names":["MoviesListStyled","styled","MoviesListItemStyled","MovieListInfoBox","MovieListInfoText","MovieListInfoDate","CircularProgressbarBox","trendingMovies","lang","location","history","useHistory","trendingMoviesList","map","trendingMovie","to","pathname","id","state","detail","src","poster_path","defaultImage","alt","title","style","width","height","value","vote_average","text","background","styles","fill","fontSize","path","stroke","moment","release_date","locale","format","Title","SectionWrap","children","useState","setTrendingMovies","useLocation","titleListLangFilter","v4","code","filter","language","includes","useEffect","getDataMovies","then","movie","results","endPoint","page","query","axios","method","baseURL","url","timeout","headers","Accept","params","api_key","process","response","data"],"sourceRoot":""}