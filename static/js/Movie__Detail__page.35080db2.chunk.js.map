{"version":3,"file":"static/js/Movie__Detail__page.35080db2.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/AdditionalInformation/AdditionalInformation.styled.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailPage.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    margin-bottom: 10px;\n    margin-top: 10px;\n`;\n\nexport const SectionWrap = styled.section`\n    justify-content: center;\n    margin: 20px 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, SectionWrap } from './Section.styled';\n\n// рендерит секцию с заголовком и детей (children)\nconst Section = ({ title, children }) => {\n    return (\n        <SectionWrap>\n            <Title>{title}</Title>\n            {children}\n        </SectionWrap>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const MovieCardImg = styled.img`\n    border-radius: 8px;\n    width: 300px;\n    height: auto;\n`;\nexport const MovieCardImgBox = styled.div`\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    padding-bottom: 10px;\n`;\nexport const MovieCardInfo = styled.div`\n    /* display: flex; */\n    justify-content: center;\n    padding: 20px;\n    width: 100%;\n`;\n","import React from 'react';\nimport { v4 } from 'uuid';\nimport Section from '../Section';\nimport {\n    MovieCardImg,\n    MovieCardImgBox,\n    MovieCardInfo,\n} from './MovieCard.styled';\nimport defaultImage from '../../images/defaultImage.jpg';\nfunction movieCard({ movieDetailId, genreList, lang }) {\n    const movieCardListLang = [\n        {\n            id: v4(),\n            code: 'en',\n            score: 'User score',\n            overview: 'Overview',\n            genres: 'Genres',\n        },\n        {\n            id: v4(),\n            code: 'uk',\n            score: 'Оцінка користувачів',\n            overview: 'Опис',\n            genres: 'Жанри',\n        },\n        {\n            id: v4(),\n            code: 'ru',\n            score: 'Оценка пользователей',\n            overview: 'Обзор',\n            genres: 'Жанры',\n        },\n    ];\n    const menuListFilter = movieCardListLang.filter(language => {\n        return language.code.includes(`${lang}`);\n    });\n\n    return movieDetailId ? (\n        <>\n            <Section title={movieDetailId.title}>\n                <MovieCardImgBox>\n                    <MovieCardImg\n                        src={\n                            movieDetailId.poster_path\n                                ? `https://image.tmdb.org/t/p/w500/${movieDetailId.poster_path}`\n                                : defaultImage\n                        }\n                        alt=\"\"\n                    />\n                    <MovieCardInfo>\n                        <h3>{movieDetailId.title}</h3>\n                        <h4>\n                            {menuListFilter[0].score}:{' '}\n                            {movieDetailId.vote_average * 10}%\n                        </h4>\n                        <h3>{menuListFilter[0].overview}</h3>\n                        <p>{movieDetailId.overview}</p>\n                        <h3>{menuListFilter[0].genres}</h3>\n                        <ul>{genreList}</ul>\n                    </MovieCardInfo>\n                </MovieCardImgBox>\n            </Section>\n        </>\n    ) : null;\n}\n\nexport default movieCard;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n    max-width: 250px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 8px 16px;\n    border-radius: 30px;\n    background-color: #3f51b5;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    /* border: 0; */\n    text-decoration: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n    min-width: 180px;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n        0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    &:hover,\n    &:focus {\n        background-color: #41608f;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport default function Button({\n    children,\n    disabled,\n    active,\n    onClick,\n    ...attrs\n}) {\n    return (\n        <ButtonStyled {...attrs} disabled={disabled} onClick={onClick}>\n            {children}\n        </ButtonStyled>\n    );\n}\n\nButton.propTypes = {\n    children: PropTypes.node,\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    active: PropTypes.bool,\n};\n\nButton.defaultProps = {\n    children: 'Default button',\n    onClick: () => {},\n    disabled: false,\n    active: false,\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const InfoText = styled.p`\n    font-weight: 700;\n    font-size: 1em;\n    color: black;\n`;\nexport const NavLinkInfoStyled = styled(NavLink)`\n    font-size: 16px;\n    color: black;\n    margin-right: 20px;\n\n    &.active {\n        color: red;\n        font-size: 18px;\n    }\n`;\n","import React, { lazy, Suspense } from 'react';\nimport {\n    Route,\n    Switch,\n    useRouteMatch,\n    useLocation,\n    Redirect,\n} from 'react-router-dom';\nimport { v4 } from 'uuid';\nimport Section from '../Section';\nimport Loader from '../Loader';\nimport { InfoText, NavLinkInfoStyled } from './AdditionalInformation.styled';\nconst Cast = lazy(() => import('../Cast' /*webpackChunkName: \"Cast__page\"*/));\nconst Reviews = lazy(() =>\n    import('../Reviews' /*webpackChunkName: \"Reviews__page\"*/)\n);\nexport default function AdditionalInformation({ lang, movieDetailId }) {\n    const location = useLocation();\n    const { url, path, isExact } = useRouteMatch();\n\n    const movieDetailPageListLang = [\n        {\n            id: v4(),\n            code: 'en',\n            buttonBack: 'Go back',\n            info: 'Additional information',\n            cast: 'Cast',\n            reviews: 'Reviews',\n        },\n        {\n            id: v4(),\n            code: 'uk',\n            buttonBack: 'Повернутися',\n            info: 'Додаткова інформація',\n            cast: 'Акторський склад',\n            reviews: 'Відгуки',\n        },\n        {\n            id: v4(),\n            code: 'ru',\n            buttonBack: 'Назад',\n            info: 'Дополнительная информация',\n            cast: 'Актерский состав',\n            reviews: 'Отзывы',\n        },\n    ];\n    const movieDetailPageListFilter = movieDetailPageListLang.filter(\n        language => {\n            return language.code.includes(`${lang}`);\n        }\n    );\n    return movieDetailId ? (\n        <>\n            <Section>\n                <hr />\n                <InfoText>{movieDetailPageListFilter[0].info}</InfoText>\n                <div>\n                    <NavLinkInfoStyled\n                        to={{\n                            pathname: `${url}/cast`,\n                            state: { detail: location.state?.detail },\n                        }}\n                    >\n                        {movieDetailPageListFilter[0].cast}\n                    </NavLinkInfoStyled>\n                    <NavLinkInfoStyled\n                        to={{\n                            pathname: `${url}/reviews`,\n                            state: { detail: location.state?.detail },\n                        }}\n                        isActive={(match, location) => {\n                            if (match?.isExact || location.pathname === url) {\n                                return true;\n                            }\n                        }}\n                    >\n                        {movieDetailPageListFilter[0].reviews}\n                    </NavLinkInfoStyled>\n                </div>\n                <Suspense fallback={<Loader />}>\n                    <Switch>\n                        <Route exact path={`${path}/cast`}>\n                            <Cast lang={lang} />\n                        </Route>\n                        <Route exact path={[path, `${path}/reviews`]}>\n                            <Reviews lang={lang} />\n                        </Route>\n                        <Route render={() => <Redirect to={url} />} />\n                    </Switch>\n                </Suspense>\n            </Section>\n        </>\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { getDataMovies } from '../services/movieApi';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport Button from '../components/Button/Button';\nimport AdditionalInformation from '../components/AdditionalInformation/AdditionalInformation';\n\nexport default function MovieDetailPage({ lang }) {\n    const history = useHistory();\n    const location = useLocation();\n    const { movieId } = useParams();\n    const [movieDetailId, setMovieDetailId] = useState(null);\n\n    const genreList =\n        movieDetailId &&\n        movieDetailId.genres.map(genre => <li key={genre.id}>{genre.name}</li>);\n    const handleGoBack = () => {\n        history.push(location.state?.detail ?? '/');\n    };\n    useEffect(() => {\n        movieId &&\n            getDataMovies(`movie/${movieId}`, 1, lang).then(movieDetails =>\n                setMovieDetailId(movieDetails)\n            );\n    }, [lang, movieId]);\n\n    const buttonBackListLang = [\n        {\n            id: v4(),\n            code: 'en',\n            buttonBack: 'Go back',\n        },\n        {\n            id: v4(),\n            code: 'uk',\n            buttonBack: 'Повернутися',\n        },\n        {\n            id: v4(),\n            code: 'ru',\n            buttonBack: 'Назад',\n        },\n    ];\n    const buttonBackListLangFilter = buttonBackListLang.filter(language => {\n        return language.code.includes(`${lang}`);\n    });\n    return movieDetailId ? (\n        <>\n            <div>\n                <Button type=\"button\" active={true} onClick={handleGoBack}>\n                    {buttonBackListLangFilter[0].buttonBack}\n                </Button>\n            </div>\n            <MovieCard\n                lang={lang}\n                movieDetailId={movieDetailId}\n                genreList={genreList}\n            />\n            <AdditionalInformation movieDetailId={movieDetailId} lang={lang} />\n            <div style={{ marginBottom: 25 }}>\n                <Button type=\"button\" active={true} onClick={handleGoBack}>\n                    {buttonBackListLangFilter[0].buttonBack}\n                </Button>\n            </div>\n        </>\n    ) : null;\n}\n","import axios from 'axios';\n\nexport const getDataMovies = async (endPoint, page = 1, lang = 'uk', query) => {\n    try {\n        const response = await axios({\n            method: 'get',\n            baseURL: `https://api.themoviedb.org/3/`,\n            url: `${endPoint}`,\n            timeout: 5000, // 5 секунд тайм-аута\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            params: {\n                api_key: process.env.REACT_APP_MOVIE_API_KEY,\n                page: `${page}`,\n                language: `${lang}`,\n                query: `${query}`,\n            },\n        });\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        throw error;\n    }\n};\n"],"names":["Title","styled","SectionWrap","title","children","MovieCardImg","MovieCardImgBox","MovieCardInfo","movieDetailId","genreList","lang","menuListFilter","id","v4","code","score","overview","genres","filter","language","includes","Section","src","poster_path","defaultImage","alt","vote_average","ButtonStyled","Button","disabled","onClick","active","attrs","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","defaultProps","InfoText","NavLinkInfoStyled","NavLink","Cast","lazy","Reviews","AdditionalInformation","location","useLocation","useRouteMatch","url","path","movieDetailPageListFilter","isExact","buttonBack","info","cast","reviews","to","pathname","state","detail","isActive","match","Suspense","fallback","Loader","exact","render","MovieDetailPage","history","useHistory","movieId","useParams","useState","setMovieDetailId","map","genre","name","handleGoBack","push","useEffect","getDataMovies","then","movieDetails","buttonBackListLangFilter","type","MovieCard","style","marginBottom","endPoint","page","query","axios","method","baseURL","timeout","headers","Accept","params","api_key","process","response","data"],"sourceRoot":""}