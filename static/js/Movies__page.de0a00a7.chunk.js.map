{"version":3,"file":"static/js/Movies__page.de0a00a7.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n    grid-gap: 16px;\n    border-radius: 8px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 15px 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\nexport const MoviesListItemStyled = styled.li`\n    position: relative;\n    img {\n        border-radius: 8px;\n    }\n    &:hover {\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\nexport const MovieListInfoBox = styled.div`\n    justify-content: center;\n    padding-top: 20px;\n    padding-bottom: 10px;\n`;\nexport const MovieListInfoText = styled.h2`\n    font-weight: 700;\n    font-size: 1em;\n    color: black;\n`;\nexport const MovieListInfoDate = styled.p`\n    font-weight: 400;\n    font-size: 1em;\n    color: rgba(0, 0, 0, 0.6);\n`;\nexport const CircularProgressbarBox = styled.div`\n    position: absolute;\n    top: 2px;\n    right: 4px;\n`;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport 'moment/locale/uk';\nimport {\n    CircularProgressbarBox,\n    MovieListInfoBox,\n    MovieListInfoDate,\n    MovieListInfoText,\n    MoviesListItemStyled,\n    MoviesListStyled,\n} from './MovieList.styled';\nimport defaultImage from '../../images/defaultImage.jpg';\nfunction MoviesList({ trendingMovies, location, lang }) {\n    const history = useHistory();\n    // console.log('history', history);\n    const trendingMoviesList = trendingMovies.map(trendingMovie => (\n        <MoviesListItemStyled key={trendingMovie.id}>\n            <Link\n                to={{\n                    pathname: `/movies/${trendingMovie.id}`,\n                    state: { detail: history.location },\n                }}\n            >\n                <img\n                    src={\n                        trendingMovie.poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${trendingMovie.poster_path}`\n                            : defaultImage\n                    }\n                    alt={trendingMovie.title}\n                />\n\n                <MovieListInfoBox>\n                    <CircularProgressbarBox style={{ width: 45, height: 45 }}>\n                        <CircularProgressbar\n                            value={trendingMovie.vote_average * 10}\n                            text={`${trendingMovie.vote_average * 10}%`}\n                            background={true}\n                            styles={{\n                                text: {\n                                    fill: '#f88',\n                                    fontSize: '36px',\n                                },\n                                background: {\n                                    fill: '#041101',\n                                },\n                                path: {\n                                    stroke: `rgba(62, 220, 30, ${\n                                        (trendingMovie.vote_average * 10) / 100\n                                    } )`,\n                                },\n                            }}\n                        />\n                    </CircularProgressbarBox>\n                    <MovieListInfoText>{trendingMovie.title}</MovieListInfoText>\n                    <MovieListInfoDate>\n                        {moment(trendingMovie.release_date)\n                            .locale(`${lang}`)\n                            .format('DD MMMM YYYY')}\n                    </MovieListInfoDate>\n                </MovieListInfoBox>\n            </Link>\n        </MoviesListItemStyled>\n    ));\n    return <MoviesListStyled>{trendingMoviesList}</MoviesListStyled>;\n}\n\nexport default MoviesList;\n","import styled from 'styled-components';\r\n\r\nexport const SearchbarHeader = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    /* color: #fff; */\r\n    color: black;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    /* overflow: hidden; */\r\n`;\r\nexport const SearchFormButton = styled.button`\r\n    display: inline-block;\r\n    /* width: 60px;\r\n  height: 60px; */\r\n    padding: 12px;\r\n    border-radius: 10px;\r\n    border: 0;\r\n    /* background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\"); */\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\nexport const SearchFormButtonLabel = styled.span`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n`;\r\nexport const SearchFormInput = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n\r\n    &::placeholder {\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconContext } from 'react-icons';\r\nimport { ImSearch } from 'react-icons/im';\r\n\r\nimport {\r\n    SearchbarHeader,\r\n    SearchForm,\r\n    SearchFormButton,\r\n    SearchFormButtonLabel,\r\n    SearchFormInput,\r\n} from './Searchbar.styled';\r\n\r\nexport default function Searchbar({ onSubmit, value }) {\r\n    return (\r\n        <SearchbarHeader>\r\n            <SearchForm onSubmit={event => onSubmit(event)}>\r\n                <SearchFormInput\r\n                    type=\"text\"\r\n                    name=\"searchQuery\"\r\n                    autocomplete=\"off\"\r\n                    autoFocus={true}\r\n                    placeholder=\"Search video\"\r\n                    defaultValue={value}\r\n                />\r\n                <SearchFormButton type=\"submit\">\r\n                    <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n                    <IconContext.Provider value={{ color: 'blue', size: 30 }}>\r\n                        <ImSearch />\r\n                    </IconContext.Provider>\r\n                </SearchFormButton>\r\n            </SearchForm>\r\n        </SearchbarHeader>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport { getDataMovies } from '../services/movieApi';\nimport { toast } from 'react-toastify';\nimport Searchbar from '../components/Searchbar';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport { useHistory } from 'react-router-dom';\n\nfunction MoviesPage({ lang }) {\n    const history = useHistory();\n    const [searchQuery, setSearchQuery] = useState(\n        () => JSON.parse(localStorage.getItem('searchQuery')) || ''\n    );\n    const [searchMovieDetailId, setSearchMovieDetailId] = useState([]);\n\n    const handleSearchBarSubmit = async event => {\n        await event.preventDefault();\n        await setSearchQuery(event.target.searchQuery.value);\n        if (event.target.searchQuery.value === '') {\n            return toast.info('Введите имя');\n        }\n    };\n\n    useEffect(() => {\n        searchQuery &&\n            getDataMovies('search/movie', 1, lang, searchQuery)\n                .then(movieDetails =>\n                    setSearchMovieDetailId(movieDetails.results)\n                )\n                .catch(error => {\n                    toast.error('Фильм не найден');\n                    history.replace('/movies');\n                });\n\n        if (searchQuery) {\n            localStorage.setItem('searchQuery', JSON.stringify(searchQuery));\n        }\n    }, [lang, searchQuery, history]);\n\n    return (\n        <>\n            <div>\n                <Searchbar\n                    onSubmit={handleSearchBarSubmit}\n                    value={searchQuery}\n                />\n                {searchMovieDetailId && (\n                    <MoviesList trendingMovies={searchMovieDetailId} />\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nexport const getDataMovies = async (endPoint, page = 1, lang = 'uk', query) => {\n    try {\n        const response = await axios({\n            method: 'get',\n            baseURL: `https://api.themoviedb.org/3/`,\n            url: `${endPoint}`,\n            timeout: 5000, // 5 секунд тайм-аута\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            params: {\n                api_key: process.env.REACT_APP_MOVIE_API_KEY,\n                page: `${page}`,\n                language: `${lang}`,\n                query: `${query}`,\n            },\n        });\n        const data = await response.data;\n        return data;\n    } catch (error) {\n        throw error;\n    }\n};\n"],"names":["MoviesListStyled","styled","MoviesListItemStyled","MovieListInfoBox","MovieListInfoText","MovieListInfoDate","CircularProgressbarBox","trendingMovies","lang","location","history","useHistory","trendingMoviesList","map","trendingMovie","to","pathname","id","state","detail","src","poster_path","defaultImage","alt","title","style","width","height","value","vote_average","text","background","styles","fill","fontSize","path","stroke","moment","release_date","locale","format","SearchbarHeader","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Searchbar","onSubmit","event","type","name","autocomplete","autoFocus","placeholder","defaultValue","color","size","useState","JSON","parse","localStorage","getItem","searchQuery","setSearchQuery","searchMovieDetailId","setSearchMovieDetailId","handleSearchBarSubmit","preventDefault","target","toast","useEffect","getDataMovies","then","movieDetails","results","catch","error","replace","setItem","stringify","MoviesList","endPoint","page","query","axios","method","baseURL","url","timeout","headers","Accept","params","api_key","process","language","response","data"],"sourceRoot":""}