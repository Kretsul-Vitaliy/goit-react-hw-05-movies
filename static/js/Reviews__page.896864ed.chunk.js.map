{"version":3,"file":"static/js/Reviews__page.896864ed.chunk.js","mappings":"mPAKe,SAASA,EAAT,GAA4B,IAATC,EAAQ,EAARA,KAC9B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBFE,EAjB0B,CAC5B,CACIC,IAAIC,EAAAA,EAAAA,KACJC,KAAM,KACNC,UAAW,4CAEf,CACIH,IAAIC,EAAAA,EAAAA,KACJC,KAAM,KACNC,UAAW,4KAEf,CACIH,IAAIC,EAAAA,EAAAA,KACJC,KAAM,KACNC,UAAW,iKAG2CC,QAC1D,SAAAC,GACI,OAAOA,EAASH,KAAKI,SAAd,UAA0Bb,OAInCc,EACFZ,EAAe,EACXA,EAAaa,KAAI,SAAAC,GAAY,OACzB,2BACI,wBACI,uBAAIA,EAAaC,YAErB,0BACI,oCADJ,IACqBD,EAAaE,aAL7BF,EAAaT,QAU1B,wBACI,uBAAID,EAA8B,GAAGI,cASjD,OANAS,EAAAA,EAAAA,YAAU,WACNf,IACIgB,EAAAA,EAAAA,GAAc,UAAD,OAAWhB,EAAX,YAA8B,EAAGJ,GAAMqB,MAChD,SAAAnB,GAAY,OAAIC,EAAgBD,EAAaoB,cAEtD,CAAClB,EAASJ,KAET,+BACI,wBAAKc","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { getDataMovies } from '../../services/movieApi';\nimport { v4 } from 'uuid';\nexport default function Reviews({ lang }) {\n    const [movieReviews, setMovieReviews] = useState(null);\n    const { movieId } = useParams();\n    const ReviewsNoResultListLang = [\n        {\n            id: v4(),\n            code: 'en',\n            noReviews: 'We don`t have any reviews for this movie',\n        },\n        {\n            id: v4(),\n            code: 'uk',\n            noReviews: 'У нас немає відгуків на цей фільм',\n        },\n        {\n            id: v4(),\n            code: 'ru',\n            noReviews: 'У нас нет отзывов на этот фильм',\n        },\n    ];\n    const ReviewsNoResultListLangFilter = ReviewsNoResultListLang.filter(\n        language => {\n            return language.code.includes(`${lang}`);\n        }\n    );\n\n    const reviewsList =\n        movieReviews > 0 ? (\n            movieReviews.map(reviewAuthor => (\n                <li key={reviewAuthor.id}>\n                    <p>\n                        <b>{reviewAuthor.author}</b>\n                    </p>\n                    <p>\n                        <b>Content:</b> {reviewAuthor.content}\n                    </p>\n                </li>\n            ))\n        ) : (\n            <p>\n                <b>{ReviewsNoResultListLangFilter[0].noReviews}</b>\n            </p>\n        );\n    useEffect(() => {\n        movieId &&\n            getDataMovies(`/movie/${movieId}/reviews`, 1, lang).then(\n                movieReviews => setMovieReviews(movieReviews.results)\n            );\n    }, [movieId, lang]);\n    return (\n        <>\n            <ol>{reviewsList}</ol>\n        </>\n    );\n}\n\nReviews.propTypes = {\n    lang: PropTypes.string,\n};\n"],"names":["Reviews","lang","useState","movieReviews","setMovieReviews","movieId","useParams","ReviewsNoResultListLangFilter","id","v4","code","noReviews","filter","language","includes","reviewsList","map","reviewAuthor","author","content","useEffect","getDataMovies","then","results"],"sourceRoot":""}