{"version":3,"file":"static/js/Cast__page.b4f4d3f6.chunk.js","mappings":"2OAEaA,E,QAAoBC,GAAAA,GAAH,0U,mBCIf,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC3B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EACFJ,GACAA,EAAaK,KAAI,SAAAC,GAAM,OACnB,2BACI,gBACIC,IACID,EAAOE,aAAP,0CACyCF,EAAOE,cAC1CC,EAEVC,IAAKJ,EAAOK,iBAEhB,wBACI,uBAAIL,EAAOM,UAEf,0BACI,sCADJ,IACuBN,EAAOO,eAbzBP,EAAOQ,OAyBxB,OAPAC,EAAAA,EAAAA,YAAU,WACNb,IACIc,EAAAA,EAAAA,GAAc,UAAD,OAAWd,EAAX,YAA8B,EAAGJ,GAAMmB,MAChD,SAAAjB,GAAY,OAAIC,EAAgBD,EAAakB,WAEtD,CAAChB,EAASJ,KAGT,+BACI,SAACH,EAAD,UAAoBS","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthorsListStyled = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n    grid-gap: 16px;\n    border-radius: 8px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 15px 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDataMovies } from '../../services/movieApi';\nimport { useParams } from 'react-router-dom';\nimport { AuthorsListStyled } from './Cast.styled';\nimport defaultImage from '../../images/defaultImage.jpg';\nexport default function Cast({ lang }) {\n    const [movieCredits, setMovieCredits] = useState(null);\n    const { movieId } = useParams();\n    const authorList =\n        movieCredits &&\n        movieCredits.map(author => (\n            <li key={author.id}>\n                <img\n                    src={\n                        author.profile_path\n                            ? `https://image.tmdb.org/t/p/w500/${author.profile_path}`\n                            : defaultImage\n                    }\n                    alt={author.original_name}\n                />\n                <p>\n                    <b>{author.name}</b>\n                </p>\n                <p>\n                    <b>Character:</b> {author.character}\n                </p>\n            </li>\n        ));\n\n    useEffect(() => {\n        movieId &&\n            getDataMovies(`/movie/${movieId}/credits`, 1, lang).then(\n                movieCredits => setMovieCredits(movieCredits.cast)\n            );\n    }, [movieId, lang]);\n\n    return (\n        <>\n            <AuthorsListStyled>{authorList}</AuthorsListStyled>\n        </>\n    );\n}\n\nCast.propTypes = {\n    lang: PropTypes.string,\n};\n"],"names":["AuthorsListStyled","styled","Cast","lang","useState","movieCredits","setMovieCredits","movieId","useParams","authorList","map","author","src","profile_path","defaultImage","alt","original_name","name","character","id","useEffect","getDataMovies","then","cast"],"sourceRoot":""}